function [A,L,MSE]=sparsa_main(X,X0,A_init,L_init,lambda_rank,lambda_sparse,epsilon,iters,K,main_iters)

%estimate A,L generated by X_t ~ Poisson(exp(nu+(A+L)*min(X_{t-1},K))
%where A is a sparse matrix and L is low-rank
%using MLE with an l_1 penalty on A and nuclear norm penalty on L.

%lambda_sparse, lambda_rank=regularization parameters on A and L

%main iters: total number of alternating descent steps to run

%stopping criteria within each step: stop if succesive losses are within epsilon or
%number of iterations exceeds iters

%A_init,L_init=initialization
    A=A_init;
    L=L_init;
    MSE=zeros(main_iters,1);
    
%perform alternating descent
for i=1:main_iters
    [A_hat,~]=sparsa_rank(X,X0,A,L,lambda_rank,epsilon,iters,K);
    temp_A=A;
    A=A_hat;
    [L_hat,~]=sparsa_sparse(X,X0,A,L,lambda_sparse,epsilon,iters,K);
    temp_L=L;
    L=L_hat; 
    MSE(i)=norm(A+L-temp_A-temp_L,'fro');
end


end
